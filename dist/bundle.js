(()=>{"use strict";var e={d:(t,n)=>{for(var s in n)e.o(n,s)&&!e.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:n[s]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)};e.d({},{l:()=>o,x:()=>d});class t{constructor(e="Untitled",t="",n=new Date,s=!1){this.title=e,this.desc=t,this.date=n,this.done=s}static formatDate(e){return e.toLocaleDateString()}static addCard(e,n="Untitled",s="",a=new Date){const d=new t(n,s,a);e.push(d)}static removeCard(e,t){t>=0&&t<e.length&&e.splice(t,1)}static changeDone(e,t,n){if(t>=0&&t<e.length){const[s]=e.splice(t,1);s.done=!s.done,n.push(s)}}static updateToDoData(e,t,n,s,a){if(t>=0&&t<e.length){const d=e[t];d.title=n,d.desc=s,d.date=new Date(a)}}static saveToLocalStorage(e,t=[]){localStorage.setItem("myToDos",JSON.stringify(e.map((e=>({...e,desc:e.desc.replace(/\n/g,"\\n"),date:e.date.toISOString()}))))),localStorage.setItem("doneToDos",JSON.stringify(t.map((e=>({...e,desc:e.desc.replace(/\n/g,"\\n"),date:e.date.toISOString()})))))}static determineBackgroundColor(e){const t=new Date;t.setHours(0,0,0,0);const n=e.getTime()-t.getTime(),s=Math.floor(n/864e5);return s<-8?"lime":s<=-3&&s>=-7?"yellow":s<=0&&s>=-2?"orange":s>0?"#FF4545":void 0}static printCards(e,n,s,a){s&&a?(s.innerHTML="",a.innerHTML="",e.forEach(((e,n)=>{const a=document.createElement("div");a.classList.add("projectBox"),a.style.backgroundColor=t.determineBackgroundColor(e.date),a.innerHTML=`\n                <div class="title" contenteditable="true" data-index="${n}" data-list="active">\n                    ${e.title}\n                </div>\n                <div class="notes" contenteditable="true" data-index="${n}" data-list="active">\n                    ${e.desc.replace(/\n/g,"<br>")} \x3c!-- Convert \n to <br> --\x3e\n                </div>\n                <input type="date" class="due-date" value="${e.date.toISOString().split("T")[0]}" data-index="${n}" data-list="active">\n                <button class="delete" data-index="${n}" data-list="active">\n                    <span class="material-symbols-outlined small">delete</span>\n                </button>\n                <button class="tick" data-index="${n}" data-list="active">\n                    <span class="material-symbols-outlined small">check</span>\n                </button>\n            `,s.appendChild(a)})),n.forEach(((e,n)=>{const s=document.createElement("div");s.classList.add("projectBox","done"),s.innerHTML=`\n                <div class="title" contenteditable="true" data-index="${n}" data-list="done">\n                    ${e.title}\n                </div>\n                <div class="notes" contenteditable="true" data-index="${n}" data-list="done">\n                    ${e.desc.replace(/\n/g,"<br>")} \x3c!-- Convert \n to <br> --\x3e\n                </div>\n                <div class="due-date" data-index="${n}" data-list="done">\n                    ${t.formatDate(e.date)}\n                </div>\n                <button class="delete" data-index="${n}" data-list="done">\n                    <span class="material-symbols-outlined small">delete</span>\n                </button>\n                <button class="tick" data-index="${n}" data-list="done">\n                    <span class="material-symbols-outlined small">check</span>\n                </button>\n            `,a.appendChild(s)}))):console.error("One or both containers are missing.")}}class n{constructor(e,t){this.index=e,this.title="New To Do",this.desc="Description of ToDo",this.myToDos=[],this.doneToDos=[],this.projectsArray=t}CreateToDo(){const e=document.getElementById("list"),t=document.createElement("li");t.classList.add("projects"),t.setAttribute("data-index",this.index),t.innerHTML=`\n            <button><i class="fas fa-home"></i>${this.title}</button>\n        `,e.appendChild(t)}PrintToDo(){document.getElementById("content").innerHTML=`\n            <header contenteditable="true" data-index="${this.index}">${this.title}</header>\n            <div id="para" contenteditable="true">${this.desc}</div>\n            <h1> > Active To Dos </h1>\n            <div class="container" id="c1"></div>\n            <h1> > Finished To Dos </h1>\n            <div class="container" id="c2"></div>\n            <button id="pen">\n                <span class="material-symbols-outlined">stylus</span>\n            </button>\n            <button id="delete">\n                <span class="material-symbols-outlined">delete</span>\n            </button>\n        `,this.updateAndRender(),document.getElementById("pen").addEventListener("click",(()=>{this.addNewCard()})),document.getElementById("delete").addEventListener("click",(()=>{this.DeleteProject(),d()})),this.addCardEventListeners(),this.addEditEventListeners()}addEditEventListeners(){const e=document.querySelector("header[data-index]"),t=document.getElementById("para");e&&e.addEventListener("blur",(()=>{this.title=e.innerText.trim(),this.saveChanges(),this.updateSidebar()})),t&&t.addEventListener("blur",(()=>{this.desc=t.innerText.trim(),this.saveChanges()}))}saveChanges(){o()}updateSidebar(){const e=document.getElementById("list").querySelector(`li[data-index="${this.index}"]`);e&&(e.querySelector("button").innerHTML=`<i class="fas fa-home"></i>${this.title}`)}addCardEventListeners(){const e=document.getElementById("c1"),n=document.getElementById("c2");e&&e.addEventListener("click",(e=>{const n=e.target.closest("button");if(n){const e=parseInt(n.getAttribute("data-index"),10);n.getAttribute("data-list"),n.classList.contains("delete")?t.removeCard(this.myToDos,e):n.classList.contains("tick")&&t.changeDone(this.myToDos,e,this.doneToDos),this.updateAndRender()}})),n&&n.addEventListener("click",(e=>{const n=e.target.closest("button");if(n){const e=parseInt(n.getAttribute("data-index"),10);n.getAttribute("data-list"),n.classList.contains("delete")?t.removeCard(this.doneToDos,e):n.classList.contains("tick")&&t.changeDone(this.doneToDos,e,this.myToDos),this.updateAndRender()}}))}DeleteProject(){this.index>=0&&this.index<this.projectsArray.length&&this.projectsArray.splice(this.index,1)}addNewCard(){t.addCard(this.myToDos),this.updateAndRender()}updateAndRender(){const e=document.getElementById("c1"),n=document.getElementById("c2");e&&t.printCards(this.myToDos,this.doneToDos,e,n)}}const s=[];let a=null;function d(){i();const e=document.getElementById("list");e?(e.innerHTML="",s.forEach((e=>{e.CreateToDo()}))):console.error("Element with ID 'list' not found.")}function o(){const e=s.map((e=>({title:e.title,desc:e.desc,myToDos:e.myToDos.map((e=>({title:e.title,desc:e.desc,date:e.date.toISOString(),done:e.done}))),doneToDos:e.doneToDos.map((e=>({title:e.title,desc:e.desc,date:e.date.toISOString(),done:e.done})))})));localStorage.setItem("projectsArray",JSON.stringify(e))}function i(){document.getElementById("content").innerHTML='\n        <header>\n            To Do List App\n        </header>\n        <div id="para">\n            Hi, this is my to do list app, made using HTML, CSS, JS on VS Code and webpack. It is designed for you to set activities, or\n            even make notes. You can press the pen icon to create a new card, delete an existing one using the trash can icon, or press\n            the tick to indicate when an activity is finished. Once a task is finished it goes to the finished section and it can be edited\n            in case. Note: The title is designed to be on one line only so if you start a new \n            line, refresh the page so it functions normally. \n        </div>\n    '}document.addEventListener("DOMContentLoaded",(()=>{!function(){const e=JSON.parse(localStorage.getItem("projectsArray"));e&&(e.forEach(((e,a)=>{const d=new n(a,s);d.title=e.title,d.desc=e.desc,d.myToDos=e.myToDos.map((e=>new t(e.title,e.desc,new Date(e.date),e.done))),d.doneToDos=e.doneToDos.map((e=>new t(e.title,e.desc,new Date(e.date),e.done))),s.push(d)})),d())}(),i(),document.getElementById("create").addEventListener("click",(()=>{const e=s.length,t=new n(e,s);t.CreateToDo(),s.push(t),o()})),document.getElementById("list").addEventListener("click",(e=>{const t=e.target.closest(".projects");if(t){const e=parseInt(t.getAttribute("data-index"),10),n=s[e];n&&(n.PrintToDo(),a=e)}})),document.getElementById("home").addEventListener("click",i),document.getElementById("content").addEventListener("click",(e=>{e.target.closest("#delete")&&null!==a&&s[a]&&(s[a].DeleteProject(),d(),o())})),document.getElementById("content").addEventListener("click",(e=>{const n=e.target.closest("button");if(n){const e=parseInt(n.getAttribute("data-index"),10),d=n.getAttribute("data-list");n.classList.contains("delete")?"active"===d?t.removeCard(s[a].myToDos,e):"done"===d&&t.removeCard(s[a].doneToDos,e):n.classList.contains("tick")&&("active"===d?t.changeDone(s[a].myToDos,e,s[a].doneToDos):"done"===d&&t.changeDone(s[a].doneToDos,e,s[a].myToDos)),s[a]&&s[a].updateAndRender(),o()}}))}))})();