(()=>{"use strict";class t{constructor(t="Untitled",e="",n=new Date,a=!1){this.title=t,this.desc=e,this.date=n,this.done=a}static formatDate(t){return t.toLocaleDateString()}static addCard(e,n="Untitled",a="",o=new Date){const d=new t(n,a,o);e.push(d)}static removeCard(t,e){e>=0&&e<t.length&&t.splice(e,1)}static changeDone(t,e,n){if(e>=0&&e<t.length){const[a]=t.splice(e,1);a.done=!a.done,n.push(a)}}static updateToDoData(t,e,n,a,o){if(e>=0&&e<t.length){const d=t[e];d.title=n,d.desc=a,d.date=new Date(o)}}static saveToLocalStorage(t,e=[]){localStorage.setItem("myToDos",JSON.stringify(t.map((t=>({...t,desc:t.desc.replace(/\n/g,"\\n"),date:t.date.toISOString()}))))),localStorage.setItem("doneToDos",JSON.stringify(e.map((t=>({...t,desc:t.desc.replace(/\n/g,"\\n"),date:t.date.toISOString()})))))}static determineBackgroundColor(t){const e=new Date;e.setHours(0,0,0,0);const n=t.getTime()-e.getTime(),a=Math.floor(n/864e5);return console.log(a),a<-8?"lime":a<=-3&&a>=-7?"yellow":a<=0&&a>=-2?"orange":a>0?"#FF4545":void 0}static printCards(e,n,a,o){a.innerHTML="",o.innerHTML="",e.forEach(((e,n)=>{const o=document.createElement("div");o.classList.add("projectBox"),o.style.backgroundColor=t.determineBackgroundColor(e.date),o.innerHTML=`\n                <div class="title" contenteditable="true" data-index="${n}" data-list="active">\n                    ${e.title}\n                </div>\n                <div class="notes" contenteditable="true" data-index="${n}" data-list="active">\n                    ${e.desc.replace(/\n/g,"<br>")} \x3c!-- Convert \n to <br> --\x3e\n                </div>\n                <input type="date" class="due-date" value="${e.date.toISOString().split("T")[0]}" data-index="${n}" data-list="active">\n                <button class="delete" data-index="${n}" data-list="active">\n                    <span class="material-symbols-outlined small">delete</span>\n                </button>\n                <button class="tick" data-index="${n}" data-list="active">\n                    <span class="material-symbols-outlined small">check</span>\n                </button>\n            `,a.appendChild(o)})),n.forEach(((e,n)=>{const a=document.createElement("div");a.classList.add("projectBox","done"),a.innerHTML=`\n                <div class="title" contenteditable="true" data-index="${n}" data-list="done">\n                    ${e.title}\n                </div>\n                <div class="notes" contenteditable="true" data-index="${n}" data-list="done">\n                    ${e.desc.replace(/\n/g,"<br>")} \x3c!-- Convert \n to <br> --\x3e\n                </div>\n                <div class="due-date" data-index="${n}" data-list="done">\n                    ${t.formatDate(e.date)}\n                </div>\n                <button class="delete" data-index="${n}" data-list="done">\n                    <span class="material-symbols-outlined small">delete</span>\n                </button>\n                <button class="tick" data-index="${n}" data-list="done">\n                    <span class="material-symbols-outlined small">check</span>\n                </button>\n            `,o.appendChild(a)}))}}const e=document.getElementById("c1"),n=document.getElementById("c2"),a=new class{constructor(){this.myToDos=[],this.doneToDos=[],this.loadFromLocalStorage()}loadFromLocalStorage(){const e=localStorage.getItem("myToDos"),n=localStorage.getItem("doneToDos");if(e){const n=JSON.parse(e);this.myToDos=n.map((e=>new t(e.title,e.desc.replace(/\\n/g,"\n"),new Date(e.date),e.done)))}if(n){const e=JSON.parse(n);this.doneToDos=e.map((e=>new t(e.title,e.desc.replace(/\\n/g,"\n"),new Date(e.date),e.done)))}}addNewCard(){t.addCard(this.myToDos),this.updateAndRender()}updateAndRender(){t.saveToLocalStorage(this.myToDos,this.doneToDos),t.printCards(this.myToDos,this.doneToDos,e,n)}};document.addEventListener("DOMContentLoaded",(()=>{a.updateAndRender(),[e,n].forEach((e=>{e.addEventListener("click",(e=>{const n=e.target.closest("button");if(n){const e=parseInt(n.getAttribute("data-index"),10),o=n.getAttribute("data-list");n.classList.contains("delete")?"active"===o?t.removeCard(a.myToDos,e):"done"===o&&t.removeCard(a.doneToDos,e):n.classList.contains("tick")&&("active"===o?t.changeDone(a.myToDos,e,a.doneToDos):"done"===o&&t.changeDone(a.doneToDos,e,a.myToDos)),a.updateAndRender()}}))})),document.addEventListener("blur",(e=>{const n=e.target;if(n.classList.contains("title")||n.classList.contains("notes")||n.classList.contains("due-date")){const e=parseInt(n.getAttribute("data-index"),10),o=n.getAttribute("data-list"),d=document.querySelector(`.title[data-index="${e}"][data-list="${o}"]`),s=document.querySelector(`.notes[data-index="${e}"][data-list="${o}"]`),i=document.querySelector(`.due-date[data-index="${e}"][data-list="${o}"]`);if(d&&s&&i){const n=d.textContent.trim(),c=s.innerHTML.replace(/<br>/g,"\n").trim(),l="INPUT"===i.tagName?i.value:new Date(i.textContent).toISOString();"active"===o?t.updateToDoData(a.myToDos,e,n,c,l):"done"===o&&t.updateToDoData(a.doneToDos,e,n,c,l),a.updateAndRender()}}}),!0),document.getElementById("pen").addEventListener("click",(()=>{a.addNewCard()}))})),document.getElementById("create").addEventListener("click",(function(){const t=document.getElementById("list"),e=document.createElement("li");e.innerHTML='\n    <button><i class="fas fa-home"></i>Home</button>\n    ',t.appendChild(e)}))})();