(()=>{"use strict";const t=document.getElementById("c1"),e=document.getElementById("c2");class a{constructor(t="Title",e="Details of task to be done",a=new Date,n=!1){this.title=t,this.desc=e,this.date=a instanceof Date&&!isNaN(a.getTime())?a:new Date,this.done=n}static formatDate(t){return t instanceof Date&&!isNaN(t.getTime())?new Intl.DateTimeFormat("en-GB",{day:"2-digit",month:"2-digit",year:"numeric",hour:"2-digit",minute:"2-digit",timeZoneName:"short",hour12:!1}).format(t):"Invalid Date"}static saveToLocalStorage(){console.log("Saving to localStorage"),localStorage.setItem("myToDos",JSON.stringify(n.map((t=>({...t,date:t.date.toISOString()}))))),localStorage.setItem("doneToDos",JSON.stringify(o.map((t=>({...t,date:t.date.toISOString()})))))}static loadFromLocalStorage(){console.log("Loading from localStorage");const t=localStorage.getItem("myToDos"),e=localStorage.getItem("doneToDos");if(t){const e=JSON.parse(t);n.length=0,e.forEach((t=>n.push(new a(t.title,t.desc,new Date(t.date),t.done))))}if(e){const t=JSON.parse(e);o.length=0,t.forEach((t=>o.push(new a(t.title,t.desc,new Date(t.date),t.done))))}}static printCards(){t.innerHTML="",e.innerHTML="",n.forEach(((e,n)=>{const o=document.createElement("div");o.classList.add("projectBox"),o.innerHTML=`\n                    <div class="title" contenteditable="true" data-index="${n}" data-list="active">\n                        ${e.title}\n                    </div>\n                    <div class="notes" contenteditable="true" data-index="${n}" data-list="active">\n                        ${e.desc}\n                    </div>\n                    <button class="delete" data-index="${n}" data-list="active">\n                        <span class="material-symbols-outlined small">delete</span>\n                    </button>\n                    <button class="tick" data-index="${n}">\n                        <span class="material-symbols-outlined small">check</span>\n                    </button>\n                    <div class="date">${a.formatDate(e.date)}</div>\n            `,t.appendChild(o)})),o.forEach(((t,n)=>{const o=document.createElement("div");o.classList.add("projectBox","done"),o.innerHTML=`\n                <div class="title" contenteditable="true" data-index="${n}" data-list="done">\n                    ${t.title}\n                </div>\n                <div class="notes">\n                    <div contenteditable="true" data-index="${n}" data-list="done">${t.desc}</div>\n                    <button class="delete" data-index="${n}" data-list="done">\n                        <span class="material-symbols-outlined small">delete</span>\n                    </button>\n                    <button class="tick" data-index="${n}">\n                        <span class="material-symbols-outlined small">check</span>\n                    </button>\n                    <div class="date">${a.formatDate(t.date)}</div>\n                </div>\n            `,e.appendChild(o)}))}static addCard(){const t=new a;n.push(t),a.saveToLocalStorage(),a.printCards()}static removeCard(t,e){"active"===e?t>=0&&t<n.length&&n.splice(t,1):"done"===e&&t>=0&&t<o.length&&o.splice(t,1),a.saveToLocalStorage(),a.printCards()}static changeDone(t){if(t>=0&&t<n.length){const e=n[t];e.done=!0,o.push(e),n.splice(t,1),a.saveToLocalStorage(),a.printCards()}}static changeDone2(t){if(t>=0&&t<o.length){const e=o[t];e.done=!1,n.push(e),o.splice(t,1),a.saveToLocalStorage(),a.printCards()}}static updateToDoData(t,e,s,i){if(console.log(`Updating ToDo: index=${t}, list=${e}, title=${s}, desc=${i}`),"active"===e){if(t>=0&&t<n.length){const e=n[t];e.title=s,e.desc=i,console.log("Updated ToDo in myToDos:",e)}}else if("done"===e&&t>=0&&t<o.length){const e=o[t];e.title=s,e.desc=i,console.log("Updated ToDo in doneToDos:",e)}a.saveToLocalStorage()}}const n=[],o=[];document.addEventListener("DOMContentLoaded",(()=>{a.loadFromLocalStorage(),a.printCards(),t.addEventListener("click",(t=>{const e=t.target.closest("button");if(e){const t=parseInt(e.getAttribute("data-index"),10),n=e.getAttribute("data-list");e.classList.contains("delete")?a.removeCard(t,n):e.classList.contains("tick")&&a.changeDone(t)}})),document.addEventListener("blur",(t=>{const e=t.target;if(e.classList.contains("title")||e.classList.contains("notes")){const t=parseInt(e.getAttribute("data-index"),10),n=e.getAttribute("data-list"),o=document.querySelector(`.title[data-index="${t}"][data-list="${n}"]`),s=document.querySelector(`.notes[data-index="${t}"][data-list="${n}"]`);if(o&&s){const e=o.textContent.trim(),i=s.textContent.trim();console.log(`Blur event: index=${t}, list=${n}, title=${e}, desc=${i}`),a.updateToDoData(t,n,e,i)}else console.error("Could not find title or description element")}}),!0),e.addEventListener("click",(t=>{const e=t.target.closest("button");if(e){const t=parseInt(e.getAttribute("data-index"),10),n=e.getAttribute("data-list");e.classList.contains("delete")?a.removeCard(t,n):e.classList.contains("tick")&&a.changeDone2(t)}})),document.getElementById("pen").addEventListener("click",a.addCard)}))})();